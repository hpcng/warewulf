// Routes for the wwapi (WareWulf API).
// TODO: Try protoc-gen-doc for generating documentation.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.0
// source: routes.proto

package wwapiv1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetNodeList_ListType int32

const (
	GetNodeList_Simple  GetNodeList_ListType = 0
	GetNodeList_Ipmi    GetNodeList_ListType = 1
	GetNodeList_Network GetNodeList_ListType = 2
	GetNodeList_Long    GetNodeList_ListType = 3
	GetNodeList_All     GetNodeList_ListType = 4
	GetNodeList_FullAll GetNodeList_ListType = 5
)

// Enum value maps for GetNodeList_ListType.
var (
	GetNodeList_ListType_name = map[int32]string{
		0: "Simple",
		1: "Ipmi",
		2: "Network",
		3: "Long",
		4: "All",
		5: "FullAll",
	}
	GetNodeList_ListType_value = map[string]int32{
		"Simple":  0,
		"Ipmi":    1,
		"Network": 2,
		"Long":    3,
		"All":     4,
		"FullAll": 5,
	}
)

func (x GetNodeList_ListType) Enum() *GetNodeList_ListType {
	p := new(GetNodeList_ListType)
	*p = x
	return p
}

func (x GetNodeList_ListType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetNodeList_ListType) Descriptor() protoreflect.EnumDescriptor {
	return file_routes_proto_enumTypes[0].Descriptor()
}

func (GetNodeList_ListType) Type() protoreflect.EnumType {
	return &file_routes_proto_enumTypes[0]
}

func (x GetNodeList_ListType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetNodeList_ListType.Descriptor instead.
func (GetNodeList_ListType) EnumDescriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{15, 0}
}

type OverlayListParameter_ListType int32

const (
	OverlayListParameter_TYPE_UNSPECIFIED OverlayListParameter_ListType = 0
	OverlayListParameter_TYPE_LONG        OverlayListParameter_ListType = 1
	OverlayListParameter_TYPE_CONTENT     OverlayListParameter_ListType = 2
)

// Enum value maps for OverlayListParameter_ListType.
var (
	OverlayListParameter_ListType_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "TYPE_LONG",
		2: "TYPE_CONTENT",
	}
	OverlayListParameter_ListType_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"TYPE_LONG":        1,
		"TYPE_CONTENT":     2,
	}
)

func (x OverlayListParameter_ListType) Enum() *OverlayListParameter_ListType {
	p := new(OverlayListParameter_ListType)
	*p = x
	return p
}

func (x OverlayListParameter_ListType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OverlayListParameter_ListType) Descriptor() protoreflect.EnumDescriptor {
	return file_routes_proto_enumTypes[1].Descriptor()
}

func (OverlayListParameter_ListType) Type() protoreflect.EnumType {
	return &file_routes_proto_enumTypes[1]
}

func (x OverlayListParameter_ListType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OverlayListParameter_ListType.Descriptor instead.
func (OverlayListParameter_ListType) EnumDescriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{41, 0}
}

type NodeDBHash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *NodeDBHash) Reset() {
	*x = NodeDBHash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeDBHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeDBHash) ProtoMessage() {}

func (x *NodeDBHash) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeDBHash.ProtoReflect.Descriptor instead.
func (*NodeDBHash) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{0}
}

func (x *NodeDBHash) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

// ContainerBuildParameter contains input for building zero or more containers.
type ContainerBuildParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerNames []string `protobuf:"bytes,1,rep,name=containerNames,proto3" json:"containerNames,omitempty"`
	Force          bool     `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	All            bool     `protobuf:"varint,3,opt,name=all,proto3" json:"all,omitempty"`
	Default        bool     `protobuf:"varint,4,opt,name=default,proto3" json:"default,omitempty"`
}

func (x *ContainerBuildParameter) Reset() {
	*x = ContainerBuildParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerBuildParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerBuildParameter) ProtoMessage() {}

func (x *ContainerBuildParameter) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerBuildParameter.ProtoReflect.Descriptor instead.
func (*ContainerBuildParameter) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{1}
}

func (x *ContainerBuildParameter) GetContainerNames() []string {
	if x != nil {
		return x.ContainerNames
	}
	return nil
}

func (x *ContainerBuildParameter) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *ContainerBuildParameter) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

func (x *ContainerBuildParameter) GetDefault() bool {
	if x != nil {
		return x.Default
	}
	return false
}

// ContainerDeleteParameter contains input for removing containers from Warewulf
// management.
type ContainerDeleteParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerNames []string `protobuf:"bytes,1,rep,name=containerNames,proto3" json:"containerNames,omitempty"`
}

func (x *ContainerDeleteParameter) Reset() {
	*x = ContainerDeleteParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerDeleteParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerDeleteParameter) ProtoMessage() {}

func (x *ContainerDeleteParameter) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerDeleteParameter.ProtoReflect.Descriptor instead.
func (*ContainerDeleteParameter) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{2}
}

func (x *ContainerDeleteParameter) GetContainerNames() []string {
	if x != nil {
		return x.ContainerNames
	}
	return nil
}

// ContainerCopyParameter contains 2 inputs : first one for the source container name and second one for the duplicated container name.
type ContainerCopyParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerSource      string `protobuf:"bytes,1,opt,name=containerSource,proto3" json:"containerSource,omitempty"`
	ContainerDestination string `protobuf:"bytes,2,opt,name=containerDestination,proto3" json:"containerDestination,omitempty"`
}

func (x *ContainerCopyParameter) Reset() {
	*x = ContainerCopyParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerCopyParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerCopyParameter) ProtoMessage() {}

func (x *ContainerCopyParameter) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerCopyParameter.ProtoReflect.Descriptor instead.
func (*ContainerCopyParameter) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{3}
}

func (x *ContainerCopyParameter) GetContainerSource() string {
	if x != nil {
		return x.ContainerSource
	}
	return ""
}

func (x *ContainerCopyParameter) GetContainerDestination() string {
	if x != nil {
		return x.ContainerDestination
	}
	return ""
}

// ContainerImportParameter has all input for importing a container.
type ContainerImportParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source   string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"` // container source uri
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`     // container name
	Force    bool   `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
	Update   bool   `protobuf:"varint,4,opt,name=update,proto3" json:"update,omitempty"`
	Build    bool   `protobuf:"varint,5,opt,name=build,proto3" json:"build,omitempty"`
	Default  bool   `protobuf:"varint,6,opt,name=default,proto3" json:"default,omitempty"`
	SyncUser bool   `protobuf:"varint,7,opt,name=syncUser,proto3" json:"syncUser,omitempty"`
}

func (x *ContainerImportParameter) Reset() {
	*x = ContainerImportParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerImportParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerImportParameter) ProtoMessage() {}

func (x *ContainerImportParameter) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerImportParameter.ProtoReflect.Descriptor instead.
func (*ContainerImportParameter) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{4}
}

func (x *ContainerImportParameter) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *ContainerImportParameter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerImportParameter) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *ContainerImportParameter) GetUpdate() bool {
	if x != nil {
		return x.Update
	}
	return false
}

func (x *ContainerImportParameter) GetBuild() bool {
	if x != nil {
		return x.Build
	}
	return false
}

func (x *ContainerImportParameter) GetDefault() bool {
	if x != nil {
		return x.Default
	}
	return false
}

func (x *ContainerImportParameter) GetSyncUser() bool {
	if x != nil {
		return x.SyncUser
	}
	return false
}

// ContainerInfo has data on each container. This is emitted in the
// ContainerListResponse.
type ContainerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	NodeCount     uint32 `protobuf:"varint,2,opt,name=nodeCount,proto3" json:"nodeCount,omitempty"`
	KernelVersion string `protobuf:"bytes,3,opt,name=kernelVersion,proto3" json:"kernelVersion,omitempty"`
	CreateDate    uint64 `protobuf:"varint,4,opt,name=createDate,proto3" json:"createDate,omitempty"` // creation date in unix time
	ModDate       uint64 `protobuf:"varint,5,opt,name=modDate,proto3" json:"modDate,omitempty"`       // date of last modification in unix time
	Size          uint64 `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`             // size of chroot and images in bytes
}

func (x *ContainerInfo) Reset() {
	*x = ContainerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerInfo) ProtoMessage() {}

func (x *ContainerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerInfo.ProtoReflect.Descriptor instead.
func (*ContainerInfo) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{5}
}

func (x *ContainerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerInfo) GetNodeCount() uint32 {
	if x != nil {
		return x.NodeCount
	}
	return 0
}

func (x *ContainerInfo) GetKernelVersion() string {
	if x != nil {
		return x.KernelVersion
	}
	return ""
}

func (x *ContainerInfo) GetCreateDate() uint64 {
	if x != nil {
		return x.CreateDate
	}
	return 0
}

func (x *ContainerInfo) GetModDate() uint64 {
	if x != nil {
		return x.ModDate
	}
	return 0
}

func (x *ContainerInfo) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

// ContainerListResponse has all information that ContainerList provides.
type ContainerListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Containers []*ContainerInfo `protobuf:"bytes,1,rep,name=containers,proto3" json:"containers,omitempty"`
}

func (x *ContainerListResponse) Reset() {
	*x = ContainerListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerListResponse) ProtoMessage() {}

func (x *ContainerListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerListResponse.ProtoReflect.Descriptor instead.
func (*ContainerListResponse) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{6}
}

func (x *ContainerListResponse) GetContainers() []*ContainerInfo {
	if x != nil {
		return x.Containers
	}
	return nil
}

// ContainerShowParameter is the input for ContainerShow.
type ContainerShowParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerName string `protobuf:"bytes,1,opt,name=containerName,proto3" json:"containerName,omitempty"`
}

func (x *ContainerShowParameter) Reset() {
	*x = ContainerShowParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerShowParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerShowParameter) ProtoMessage() {}

func (x *ContainerShowParameter) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerShowParameter.ProtoReflect.Descriptor instead.
func (*ContainerShowParameter) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{7}
}

func (x *ContainerShowParameter) GetContainerName() string {
	if x != nil {
		return x.ContainerName
	}
	return ""
}

// ContainerShowResponse has all information emitted on ContainerShow.
type ContainerShowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Rootfs        string   `protobuf:"bytes,2,opt,name=Rootfs,proto3" json:"Rootfs,omitempty"`
	Nodes         []string `protobuf:"bytes,3,rep,name=Nodes,proto3" json:"Nodes,omitempty"`
	KernelVersion string   `protobuf:"bytes,4,opt,name=KernelVersion,proto3" json:"KernelVersion,omitempty"`
}

func (x *ContainerShowResponse) Reset() {
	*x = ContainerShowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerShowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerShowResponse) ProtoMessage() {}

func (x *ContainerShowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerShowResponse.ProtoReflect.Descriptor instead.
func (*ContainerShowResponse) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{8}
}

func (x *ContainerShowResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerShowResponse) GetRootfs() string {
	if x != nil {
		return x.Rootfs
	}
	return ""
}

func (x *ContainerShowResponse) GetNodes() []string {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *ContainerShowResponse) GetKernelVersion() string {
	if x != nil {
		return x.KernelVersion
	}
	return ""
}

// ContainerSyncUserParameter is the input for ContainerSyncUser.
type ContainerSyncUserParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerName string `protobuf:"bytes,1,opt,name=containerName,proto3" json:"containerName,omitempty"`
}

func (x *ContainerSyncUserParameter) Reset() {
	*x = ContainerSyncUserParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerSyncUserParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerSyncUserParameter) ProtoMessage() {}

func (x *ContainerSyncUserParameter) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerSyncUserParameter.ProtoReflect.Descriptor instead.
func (*ContainerSyncUserParameter) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{9}
}

func (x *ContainerSyncUserParameter) GetContainerName() string {
	if x != nil {
		return x.ContainerName
	}
	return ""
}

// NodeNames is an array of node ids.
type NodeNames struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeNames []string `protobuf:"bytes,1,rep,name=nodeNames,proto3" json:"nodeNames,omitempty"`
}

func (x *NodeNames) Reset() {
	*x = NodeNames{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeNames) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeNames) ProtoMessage() {}

func (x *NodeNames) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeNames.ProtoReflect.Descriptor instead.
func (*NodeNames) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{10}
}

func (x *NodeNames) GetNodeNames() []string {
	if x != nil {
		return x.NodeNames
	}
	return nil
}

// NodeField contains data output on NodeList.
type NodeField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Value  string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"` // TODO: Variable name okay?
	Print  string `protobuf:"bytes,3,opt,name=print,proto3" json:"print,omitempty"` // Empty values printed as -- in wwctl.
}

func (x *NodeField) Reset() {
	*x = NodeField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeField) ProtoMessage() {}

func (x *NodeField) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeField.ProtoReflect.Descriptor instead.
func (*NodeField) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{11}
}

func (x *NodeField) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *NodeField) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *NodeField) GetPrint() string {
	if x != nil {
		return x.Print
	}
	return ""
}

// NetDev is network devices (NICs) on a node.
type NetDev struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field map[string]*NodeField `protobuf:"bytes,1,rep,name=Field,proto3" json:"Field,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Tags  map[string]*NodeField `protobuf:"bytes,9,rep,name=Tags,proto3" json:"Tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *NetDev) Reset() {
	*x = NetDev{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetDev) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetDev) ProtoMessage() {}

func (x *NetDev) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetDev.ProtoReflect.Descriptor instead.
func (*NetDev) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{12}
}

func (x *NetDev) GetField() map[string]*NodeField {
	if x != nil {
		return x.Field
	}
	return nil
}

func (x *NetDev) GetTags() map[string]*NodeField {
	if x != nil {
		return x.Tags
	}
	return nil
}

// NodeInfo contains details about a node managed by Warewulf/
type NodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields  map[string]*NodeField `protobuf:"bytes,1,rep,name=Fields,proto3" json:"Fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	NetDevs map[string]*NetDev    `protobuf:"bytes,23,rep,name=NetDevs,proto3" json:"NetDevs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Tags    map[string]*NodeField `protobuf:"bytes,24,rep,name=Tags,proto3" json:"Tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Keys    map[string]*NodeField `protobuf:"bytes,25,rep,name=Keys,proto3" json:"Keys,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // TODO: We may not need this. Tags may be it. Ask Greg.
}

func (x *NodeInfo) Reset() {
	*x = NodeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfo) ProtoMessage() {}

func (x *NodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfo.ProtoReflect.Descriptor instead.
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{13}
}

func (x *NodeInfo) GetFields() map[string]*NodeField {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *NodeInfo) GetNetDevs() map[string]*NetDev {
	if x != nil {
		return x.NetDevs
	}
	return nil
}

func (x *NodeInfo) GetTags() map[string]*NodeField {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *NodeInfo) GetKeys() map[string]*NodeField {
	if x != nil {
		return x.Keys
	}
	return nil
}

// NodeListResponse is the output of NodeList.
type NodeListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*NodeInfo `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *NodeListResponse) Reset() {
	*x = NodeListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeListResponse) ProtoMessage() {}

func (x *NodeListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeListResponse.ProtoReflect.Descriptor instead.
func (*NodeListResponse) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{14}
}

func (x *NodeListResponse) GetNodes() []*NodeInfo {
	if x != nil {
		return x.Nodes
	}
	return nil
}

// Request a node list
type GetNodeList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  GetNodeList_ListType `protobuf:"varint,7,opt,name=type,proto3,enum=wwapi.v1.GetNodeList_ListType" json:"type,omitempty"`
	Nodes []string             `protobuf:"bytes,8,rep,name=Nodes,proto3" json:"Nodes,omitempty"`
}

func (x *GetNodeList) Reset() {
	*x = GetNodeList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeList) ProtoMessage() {}

func (x *GetNodeList) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeList.ProtoReflect.Descriptor instead.
func (*GetNodeList) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{15}
}

func (x *GetNodeList) GetType() GetNodeList_ListType {
	if x != nil {
		return x.Type
	}
	return GetNodeList_Simple
}

func (x *GetNodeList) GetNodes() []string {
	if x != nil {
		return x.Nodes
	}
	return nil
}

// Get the formated output as string
type NodeList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Output []string `protobuf:"bytes,1,rep,name=Output,proto3" json:"Output,omitempty"`
}

func (x *NodeList) Reset() {
	*x = NodeList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeList) ProtoMessage() {}

func (x *NodeList) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeList.ProtoReflect.Descriptor instead.
func (*NodeList) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{16}
}

func (x *NodeList) GetOutput() []string {
	if x != nil {
		return x.Output
	}
	return nil
}

// NodeList* messages are different node list views
type NodeListSimple struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeName string `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	Profiles string `protobuf:"bytes,2,opt,name=profiles,proto3" json:"profiles,omitempty"`
	Network  string `protobuf:"bytes,3,opt,name=network,proto3" json:"network,omitempty"`
}

func (x *NodeListSimple) Reset() {
	*x = NodeListSimple{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeListSimple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeListSimple) ProtoMessage() {}

func (x *NodeListSimple) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeListSimple.ProtoReflect.Descriptor instead.
func (*NodeListSimple) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{17}
}

func (x *NodeListSimple) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *NodeListSimple) GetProfiles() string {
	if x != nil {
		return x.Profiles
	}
	return ""
}

func (x *NodeListSimple) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

type NodeListNetwork struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeName string `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Hwaddr   string `protobuf:"bytes,3,opt,name=hwaddr,proto3" json:"hwaddr,omitempty"`
	Ipaddr   string `protobuf:"bytes,4,opt,name=ipaddr,proto3" json:"ipaddr,omitempty"`
	Gateway  string `protobuf:"bytes,5,opt,name=gateway,proto3" json:"gateway,omitempty"`
	Device   string `protobuf:"bytes,6,opt,name=device,proto3" json:"device,omitempty"`
}

func (x *NodeListNetwork) Reset() {
	*x = NodeListNetwork{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeListNetwork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeListNetwork) ProtoMessage() {}

func (x *NodeListNetwork) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeListNetwork.ProtoReflect.Descriptor instead.
func (*NodeListNetwork) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{18}
}

func (x *NodeListNetwork) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *NodeListNetwork) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NodeListNetwork) GetHwaddr() string {
	if x != nil {
		return x.Hwaddr
	}
	return ""
}

func (x *NodeListNetwork) GetIpaddr() string {
	if x != nil {
		return x.Ipaddr
	}
	return ""
}

func (x *NodeListNetwork) GetGateway() string {
	if x != nil {
		return x.Gateway
	}
	return ""
}

func (x *NodeListNetwork) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

type NodeListIpmi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeName       string `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	IpmiIpAddr     string `protobuf:"bytes,2,opt,name=ipmi_ip_addr,json=ipmiIpAddr,proto3" json:"ipmi_ip_addr,omitempty"`
	IpmiPort       string `protobuf:"bytes,3,opt,name=ipmi_port,json=ipmiPort,proto3" json:"ipmi_port,omitempty"`
	IpmiUserName   string `protobuf:"bytes,4,opt,name=ipmi_user_name,json=ipmiUserName,proto3" json:"ipmi_user_name,omitempty"`
	IpmiInterface  string `protobuf:"bytes,5,opt,name=ipmi_interface,json=ipmiInterface,proto3" json:"ipmi_interface,omitempty"`
	IpmiEscapeChar string `protobuf:"bytes,6,opt,name=ipmi_escape_char,json=ipmiEscapeChar,proto3" json:"ipmi_escape_char,omitempty"`
}

func (x *NodeListIpmi) Reset() {
	*x = NodeListIpmi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeListIpmi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeListIpmi) ProtoMessage() {}

func (x *NodeListIpmi) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeListIpmi.ProtoReflect.Descriptor instead.
func (*NodeListIpmi) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{19}
}

func (x *NodeListIpmi) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *NodeListIpmi) GetIpmiIpAddr() string {
	if x != nil {
		return x.IpmiIpAddr
	}
	return ""
}

func (x *NodeListIpmi) GetIpmiPort() string {
	if x != nil {
		return x.IpmiPort
	}
	return ""
}

func (x *NodeListIpmi) GetIpmiUserName() string {
	if x != nil {
		return x.IpmiUserName
	}
	return ""
}

func (x *NodeListIpmi) GetIpmiInterface() string {
	if x != nil {
		return x.IpmiInterface
	}
	return ""
}

func (x *NodeListIpmi) GetIpmiEscapeChar() string {
	if x != nil {
		return x.IpmiEscapeChar
	}
	return ""
}

type NodeListLong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeName              string `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	KernelOverride        string `protobuf:"bytes,2,opt,name=kernel_override,json=kernelOverride,proto3" json:"kernel_override,omitempty"`
	Container             string `protobuf:"bytes,3,opt,name=container,proto3" json:"container,omitempty"`
	OverlaysSystemRuntime string `protobuf:"bytes,4,opt,name=overlays_system_runtime,json=overlaysSystemRuntime,proto3" json:"overlays_system_runtime,omitempty"`
}

func (x *NodeListLong) Reset() {
	*x = NodeListLong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeListLong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeListLong) ProtoMessage() {}

func (x *NodeListLong) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeListLong.ProtoReflect.Descriptor instead.
func (*NodeListLong) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{20}
}

func (x *NodeListLong) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *NodeListLong) GetKernelOverride() string {
	if x != nil {
		return x.KernelOverride
	}
	return ""
}

func (x *NodeListLong) GetContainer() string {
	if x != nil {
		return x.Container
	}
	return ""
}

func (x *NodeListLong) GetOverlaysSystemRuntime() string {
	if x != nil {
		return x.OverlaysSystemRuntime
	}
	return ""
}

type NodeListFull struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeName string `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	Field    string `protobuf:"bytes,2,opt,name=field,proto3" json:"field,omitempty"`
	Profile  string `protobuf:"bytes,3,opt,name=profile,proto3" json:"profile,omitempty"`
	Value    string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *NodeListFull) Reset() {
	*x = NodeListFull{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeListFull) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeListFull) ProtoMessage() {}

func (x *NodeListFull) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeListFull.ProtoReflect.Descriptor instead.
func (*NodeListFull) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{21}
}

func (x *NodeListFull) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *NodeListFull) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *NodeListFull) GetProfile() string {
	if x != nil {
		return x.Profile
	}
	return ""
}

func (x *NodeListFull) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type NodeListEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to NodeEntry:
	//
	//	*NodeListEntry_NodeSimple
	//	*NodeListEntry_NodeNetwork
	//	*NodeListEntry_NodeIpmi
	//	*NodeListEntry_NodeLong
	//	*NodeListEntry_NodeFull
	NodeEntry isNodeListEntry_NodeEntry `protobuf_oneof:"node_entry"`
}

func (x *NodeListEntry) Reset() {
	*x = NodeListEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeListEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeListEntry) ProtoMessage() {}

func (x *NodeListEntry) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeListEntry.ProtoReflect.Descriptor instead.
func (*NodeListEntry) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{22}
}

func (m *NodeListEntry) GetNodeEntry() isNodeListEntry_NodeEntry {
	if m != nil {
		return m.NodeEntry
	}
	return nil
}

func (x *NodeListEntry) GetNodeSimple() *NodeListSimple {
	if x, ok := x.GetNodeEntry().(*NodeListEntry_NodeSimple); ok {
		return x.NodeSimple
	}
	return nil
}

func (x *NodeListEntry) GetNodeNetwork() *NodeListNetwork {
	if x, ok := x.GetNodeEntry().(*NodeListEntry_NodeNetwork); ok {
		return x.NodeNetwork
	}
	return nil
}

func (x *NodeListEntry) GetNodeIpmi() *NodeListIpmi {
	if x, ok := x.GetNodeEntry().(*NodeListEntry_NodeIpmi); ok {
		return x.NodeIpmi
	}
	return nil
}

func (x *NodeListEntry) GetNodeLong() *NodeListLong {
	if x, ok := x.GetNodeEntry().(*NodeListEntry_NodeLong); ok {
		return x.NodeLong
	}
	return nil
}

func (x *NodeListEntry) GetNodeFull() *NodeListFull {
	if x, ok := x.GetNodeEntry().(*NodeListEntry_NodeFull); ok {
		return x.NodeFull
	}
	return nil
}

type isNodeListEntry_NodeEntry interface {
	isNodeListEntry_NodeEntry()
}

type NodeListEntry_NodeSimple struct {
	NodeSimple *NodeListSimple `protobuf:"bytes,1,opt,name=node_simple,json=nodeSimple,proto3,oneof"`
}

type NodeListEntry_NodeNetwork struct {
	NodeNetwork *NodeListNetwork `protobuf:"bytes,2,opt,name=node_network,json=nodeNetwork,proto3,oneof"`
}

type NodeListEntry_NodeIpmi struct {
	NodeIpmi *NodeListIpmi `protobuf:"bytes,3,opt,name=node_ipmi,json=nodeIpmi,proto3,oneof"`
}

type NodeListEntry_NodeLong struct {
	NodeLong *NodeListLong `protobuf:"bytes,4,opt,name=node_long,json=nodeLong,proto3,oneof"`
}

type NodeListEntry_NodeFull struct {
	NodeFull *NodeListFull `protobuf:"bytes,5,opt,name=node_full,json=nodeFull,proto3,oneof"`
}

func (*NodeListEntry_NodeSimple) isNodeListEntry_NodeEntry() {}

func (*NodeListEntry_NodeNetwork) isNodeListEntry_NodeEntry() {}

func (*NodeListEntry_NodeIpmi) isNodeListEntry_NodeEntry() {}

func (*NodeListEntry_NodeLong) isNodeListEntry_NodeEntry() {}

func (*NodeListEntry_NodeFull) isNodeListEntry_NodeEntry() {}

type NodeListViewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*NodeListEntry `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *NodeListViewResponse) Reset() {
	*x = NodeListViewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeListViewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeListViewResponse) ProtoMessage() {}

func (x *NodeListViewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeListViewResponse.ProtoReflect.Descriptor instead.
func (*NodeListViewResponse) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{23}
}

func (x *NodeListViewResponse) GetNodes() []*NodeListEntry {
	if x != nil {
		return x.Nodes
	}
	return nil
}

// Request a profile list view
type GetProfileList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShowAll     bool     `protobuf:"varint,1,opt,name=ShowAll,proto3" json:"ShowAll,omitempty"`
	ShowFullAll bool     `protobuf:"varint,2,opt,name=ShowFullAll,proto3" json:"ShowFullAll,omitempty"`
	Profiles    []string `protobuf:"bytes,3,rep,name=Profiles,proto3" json:"Profiles,omitempty"`
}

func (x *GetProfileList) Reset() {
	*x = GetProfileList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileList) ProtoMessage() {}

func (x *GetProfileList) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileList.ProtoReflect.Descriptor instead.
func (*GetProfileList) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{24}
}

func (x *GetProfileList) GetShowAll() bool {
	if x != nil {
		return x.ShowAll
	}
	return false
}

func (x *GetProfileList) GetShowFullAll() bool {
	if x != nil {
		return x.ShowFullAll
	}
	return false
}

func (x *GetProfileList) GetProfiles() []string {
	if x != nil {
		return x.Profiles
	}
	return nil
}

// Get the formated output as string
type ProfileList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Output []string `protobuf:"bytes,1,rep,name=Output,proto3" json:"Output,omitempty"`
}

func (x *ProfileList) Reset() {
	*x = ProfileList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileList) ProtoMessage() {}

func (x *ProfileList) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileList.ProtoReflect.Descriptor instead.
func (*ProfileList) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{25}
}

func (x *ProfileList) GetOutput() []string {
	if x != nil {
		return x.Output
	}
	return nil
}

// ProfileListFull returns a full profile list view
type ProfileListFull struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileName string `protobuf:"bytes,1,opt,name=profile_name,json=profileName,proto3" json:"profile_name,omitempty"`
	Field       string `protobuf:"bytes,2,opt,name=field,proto3" json:"field,omitempty"`
	Source      string `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	Value       string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ProfileListFull) Reset() {
	*x = ProfileListFull{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileListFull) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileListFull) ProtoMessage() {}

func (x *ProfileListFull) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileListFull.ProtoReflect.Descriptor instead.
func (*ProfileListFull) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{26}
}

func (x *ProfileListFull) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

func (x *ProfileListFull) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *ProfileListFull) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *ProfileListFull) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// ProfileListSimple returns a simple profile list view
type ProfileListSimple struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileName string `protobuf:"bytes,1,opt,name=profile_name,json=profileName,proto3" json:"profile_name,omitempty"`
	Comment     string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *ProfileListSimple) Reset() {
	*x = ProfileListSimple{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileListSimple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileListSimple) ProtoMessage() {}

func (x *ProfileListSimple) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileListSimple.ProtoReflect.Descriptor instead.
func (*ProfileListSimple) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{27}
}

func (x *ProfileListSimple) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

func (x *ProfileListSimple) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type ProfileListEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ProfileEntry:
	//
	//	*ProfileListEntry_ProfileFull
	//	*ProfileListEntry_ProfileSimple
	ProfileEntry isProfileListEntry_ProfileEntry `protobuf_oneof:"profile_entry"`
}

func (x *ProfileListEntry) Reset() {
	*x = ProfileListEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileListEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileListEntry) ProtoMessage() {}

func (x *ProfileListEntry) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileListEntry.ProtoReflect.Descriptor instead.
func (*ProfileListEntry) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{28}
}

func (m *ProfileListEntry) GetProfileEntry() isProfileListEntry_ProfileEntry {
	if m != nil {
		return m.ProfileEntry
	}
	return nil
}

func (x *ProfileListEntry) GetProfileFull() *ProfileListFull {
	if x, ok := x.GetProfileEntry().(*ProfileListEntry_ProfileFull); ok {
		return x.ProfileFull
	}
	return nil
}

func (x *ProfileListEntry) GetProfileSimple() *ProfileListSimple {
	if x, ok := x.GetProfileEntry().(*ProfileListEntry_ProfileSimple); ok {
		return x.ProfileSimple
	}
	return nil
}

type isProfileListEntry_ProfileEntry interface {
	isProfileListEntry_ProfileEntry()
}

type ProfileListEntry_ProfileFull struct {
	ProfileFull *ProfileListFull `protobuf:"bytes,1,opt,name=profile_full,json=profileFull,proto3,oneof"`
}

type ProfileListEntry_ProfileSimple struct {
	ProfileSimple *ProfileListSimple `protobuf:"bytes,2,opt,name=profile_simple,json=profileSimple,proto3,oneof"`
}

func (*ProfileListEntry_ProfileFull) isProfileListEntry_ProfileEntry() {}

func (*ProfileListEntry_ProfileSimple) isProfileListEntry_ProfileEntry() {}

type ProfileListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profiles []*ProfileListEntry `protobuf:"bytes,1,rep,name=profiles,proto3" json:"profiles,omitempty"`
}

func (x *ProfileListResponse) Reset() {
	*x = ProfileListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileListResponse) ProtoMessage() {}

func (x *ProfileListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileListResponse.ProtoReflect.Descriptor instead.
func (*ProfileListResponse) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{29}
}

func (x *ProfileListResponse) GetProfiles() []*ProfileListEntry {
	if x != nil {
		return x.Profiles
	}
	return nil
}

// NodeAddParameter contains all input for adding a node to be managed by
// Warewulf. Only adds nodes if the hash matches the actual hash of the
// configuration.
type NodeAddParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeConfYaml string   `protobuf:"bytes,1,opt,name=nodeConfYaml,proto3" json:"nodeConfYaml,omitempty"`
	Force        bool     `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	Hash         string   `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	NodeNames    []string `protobuf:"bytes,10,rep,name=nodeNames,proto3" json:"nodeNames,omitempty"`
}

func (x *NodeAddParameter) Reset() {
	*x = NodeAddParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeAddParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeAddParameter) ProtoMessage() {}

func (x *NodeAddParameter) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeAddParameter.ProtoReflect.Descriptor instead.
func (*NodeAddParameter) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{30}
}

func (x *NodeAddParameter) GetNodeConfYaml() string {
	if x != nil {
		return x.NodeConfYaml
	}
	return ""
}

func (x *NodeAddParameter) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *NodeAddParameter) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *NodeAddParameter) GetNodeNames() []string {
	if x != nil {
		return x.NodeNames
	}
	return nil
}

// NodeYaml is just the updated YAML config which will be added
// to nodes.conf (is resused for profile edit)
type NodeYaml struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeConfMapYaml string `protobuf:"bytes,1,opt,name=nodeConfMapYaml,proto3" json:"nodeConfMapYaml,omitempty"`
	Hash            string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *NodeYaml) Reset() {
	*x = NodeYaml{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeYaml) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeYaml) ProtoMessage() {}

func (x *NodeYaml) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeYaml.ProtoReflect.Descriptor instead.
func (*NodeYaml) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{31}
}

func (x *NodeYaml) GetNodeConfMapYaml() string {
	if x != nil {
		return x.NodeConfMapYaml
	}
	return ""
}

func (x *NodeYaml) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

// NodeDeleteParameter contains input for removing nodes from Warewulf
// management. If the given hash differs with the actual hash of the
// configuration, no node is deleted. The force option allows the deletion
// of nodes with a correct hash.
type NodeDeleteParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Force     bool     `protobuf:"varint,1,opt,name=force,proto3" json:"force,omitempty"`
	NodeNames []string `protobuf:"bytes,2,rep,name=nodeNames,proto3" json:"nodeNames,omitempty"`
	Hash      string   `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *NodeDeleteParameter) Reset() {
	*x = NodeDeleteParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeDeleteParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeDeleteParameter) ProtoMessage() {}

func (x *NodeDeleteParameter) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeDeleteParameter.ProtoReflect.Descriptor instead.
func (*NodeDeleteParameter) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{32}
}

func (x *NodeDeleteParameter) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *NodeDeleteParameter) GetNodeNames() []string {
	if x != nil {
		return x.NodeNames
	}
	return nil
}

func (x *NodeDeleteParameter) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

// NodeSetParameter contains all fields for updating aspects of nodes managed
// by Warewulf.
type NodeSetParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeConfYaml     string   `protobuf:"bytes,1,opt,name=nodeConfYaml,proto3" json:"nodeConfYaml,omitempty"`
	NetdevDelete     string   `protobuf:"bytes,2,opt,name=netdevDelete,proto3" json:"netdevDelete,omitempty"`
	DiskDelete       string   `protobuf:"bytes,3,opt,name=diskDelete,proto3" json:"diskDelete,omitempty"`
	PartitionDelete  string   `protobuf:"bytes,4,opt,name=partitionDelete,proto3" json:"partitionDelete,omitempty"`
	FilesystemDelete string   `protobuf:"bytes,5,opt,name=filesystemDelete,proto3" json:"filesystemDelete,omitempty"`
	AllNodes         bool     `protobuf:"varint,6,opt,name=allNodes,proto3" json:"allNodes,omitempty"`
	Force            bool     `protobuf:"varint,7,opt,name=force,proto3" json:"force,omitempty"`
	NodeNames        []string `protobuf:"bytes,8,rep,name=nodeNames,proto3" json:"nodeNames,omitempty"`
}

func (x *NodeSetParameter) Reset() {
	*x = NodeSetParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeSetParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeSetParameter) ProtoMessage() {}

func (x *NodeSetParameter) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeSetParameter.ProtoReflect.Descriptor instead.
func (*NodeSetParameter) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{33}
}

func (x *NodeSetParameter) GetNodeConfYaml() string {
	if x != nil {
		return x.NodeConfYaml
	}
	return ""
}

func (x *NodeSetParameter) GetNetdevDelete() string {
	if x != nil {
		return x.NetdevDelete
	}
	return ""
}

func (x *NodeSetParameter) GetDiskDelete() string {
	if x != nil {
		return x.DiskDelete
	}
	return ""
}

func (x *NodeSetParameter) GetPartitionDelete() string {
	if x != nil {
		return x.PartitionDelete
	}
	return ""
}

func (x *NodeSetParameter) GetFilesystemDelete() string {
	if x != nil {
		return x.FilesystemDelete
	}
	return ""
}

func (x *NodeSetParameter) GetAllNodes() bool {
	if x != nil {
		return x.AllNodes
	}
	return false
}

func (x *NodeSetParameter) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *NodeSetParameter) GetNodeNames() []string {
	if x != nil {
		return x.NodeNames
	}
	return nil
}

// ProfileSetParameter contains all fields for updating aspects of profiles managed. Basically a copy of NodeSetParameters
// by Warewulf.
type ProfileSetParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeConfYaml     string   `protobuf:"bytes,1,opt,name=nodeConfYaml,proto3" json:"nodeConfYaml,omitempty"`
	NetdevDelete     string   `protobuf:"bytes,2,opt,name=netdevDelete,proto3" json:"netdevDelete,omitempty"`
	DiskDelete       string   `protobuf:"bytes,3,opt,name=diskDelete,proto3" json:"diskDelete,omitempty"`
	PartitionDelete  string   `protobuf:"bytes,4,opt,name=partitionDelete,proto3" json:"partitionDelete,omitempty"`
	FilesystemDelete string   `protobuf:"bytes,5,opt,name=filesystemDelete,proto3" json:"filesystemDelete,omitempty"`
	AllProfiles      bool     `protobuf:"varint,6,opt,name=allProfiles,proto3" json:"allProfiles,omitempty"`
	Force            bool     `protobuf:"varint,7,opt,name=force,proto3" json:"force,omitempty"`
	ProfileNames     []string `protobuf:"bytes,8,rep,name=profileNames,proto3" json:"profileNames,omitempty"`
}

func (x *ProfileSetParameter) Reset() {
	*x = ProfileSetParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileSetParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileSetParameter) ProtoMessage() {}

func (x *ProfileSetParameter) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileSetParameter.ProtoReflect.Descriptor instead.
func (*ProfileSetParameter) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{34}
}

func (x *ProfileSetParameter) GetNodeConfYaml() string {
	if x != nil {
		return x.NodeConfYaml
	}
	return ""
}

func (x *ProfileSetParameter) GetNetdevDelete() string {
	if x != nil {
		return x.NetdevDelete
	}
	return ""
}

func (x *ProfileSetParameter) GetDiskDelete() string {
	if x != nil {
		return x.DiskDelete
	}
	return ""
}

func (x *ProfileSetParameter) GetPartitionDelete() string {
	if x != nil {
		return x.PartitionDelete
	}
	return ""
}

func (x *ProfileSetParameter) GetFilesystemDelete() string {
	if x != nil {
		return x.FilesystemDelete
	}
	return ""
}

func (x *ProfileSetParameter) GetAllProfiles() bool {
	if x != nil {
		return x.AllProfiles
	}
	return false
}

func (x *ProfileSetParameter) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *ProfileSetParameter) GetProfileNames() []string {
	if x != nil {
		return x.ProfileNames
	}
	return nil
}

// NodeStatus contains information about the imaging status per node.
type NodeStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeName string `protobuf:"bytes,1,opt,name=nodeName,proto3" json:"nodeName,omitempty"`  // Name (Id) of the node.
	Stage    string `protobuf:"bytes,2,opt,name=stage,proto3" json:"stage,omitempty"`        // Stage of imaging.
	Sent     string `protobuf:"bytes,3,opt,name=sent,proto3" json:"sent,omitempty"`          // Last overlay sent.
	Ipaddr   string `protobuf:"bytes,4,opt,name=ipaddr,proto3" json:"ipaddr,omitempty"`      // Node IP address.
	Lastseen int64  `protobuf:"varint,5,opt,name=lastseen,proto3" json:"lastseen,omitempty"` // Time in seconds since the node was last seen.
}

func (x *NodeStatus) Reset() {
	*x = NodeStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeStatus) ProtoMessage() {}

func (x *NodeStatus) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeStatus.ProtoReflect.Descriptor instead.
func (*NodeStatus) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{35}
}

func (x *NodeStatus) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *NodeStatus) GetStage() string {
	if x != nil {
		return x.Stage
	}
	return ""
}

func (x *NodeStatus) GetSent() string {
	if x != nil {
		return x.Sent
	}
	return ""
}

func (x *NodeStatus) GetIpaddr() string {
	if x != nil {
		return x.Ipaddr
	}
	return ""
}

func (x *NodeStatus) GetLastseen() int64 {
	if x != nil {
		return x.Lastseen
	}
	return 0
}

// NodeStatusResponse contains NodeStatus for zero or more nodes.
type NodeStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeStatus []*NodeStatus `protobuf:"bytes,1,rep,name=nodeStatus,proto3" json:"nodeStatus,omitempty"`
}

func (x *NodeStatusResponse) Reset() {
	*x = NodeStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeStatusResponse) ProtoMessage() {}

func (x *NodeStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeStatusResponse.ProtoReflect.Descriptor instead.
func (*NodeStatusResponse) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{36}
}

func (x *NodeStatusResponse) GetNodeStatus() []*NodeStatus {
	if x != nil {
		return x.NodeStatus
	}
	return nil
}

// VersionReponse contains versions of the software.
type VersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiPrefix       string `protobuf:"bytes,1,opt,name=apiPrefix,proto3" json:"apiPrefix,omitempty"`
	ApiVersion      string `protobuf:"bytes,2,opt,name=apiVersion,proto3" json:"apiVersion,omitempty"`
	WarewulfVersion string `protobuf:"bytes,3,opt,name=warewulfVersion,proto3" json:"warewulfVersion,omitempty"`
}

func (x *VersionResponse) Reset() {
	*x = VersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionResponse) ProtoMessage() {}

func (x *VersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionResponse.ProtoReflect.Descriptor instead.
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{37}
}

func (x *VersionResponse) GetApiPrefix() string {
	if x != nil {
		return x.ApiPrefix
	}
	return ""
}

func (x *VersionResponse) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *VersionResponse) GetWarewulfVersion() string {
	if x != nil {
		return x.WarewulfVersion
	}
	return ""
}

// Check if config is writeable
type CanWriteConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CanWriteConfig bool `protobuf:"varint,1,opt,name=canWriteConfig,proto3" json:"canWriteConfig,omitempty"`
}

func (x *CanWriteConfig) Reset() {
	*x = CanWriteConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CanWriteConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CanWriteConfig) ProtoMessage() {}

func (x *CanWriteConfig) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CanWriteConfig.ProtoReflect.Descriptor instead.
func (*CanWriteConfig) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{38}
}

func (x *CanWriteConfig) GetCanWriteConfig() bool {
	if x != nil {
		return x.CanWriteConfig
	}
	return false
}

// Kernel info
type KernelInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KernelName    string `protobuf:"bytes,1,opt,name=kernel_name,json=kernelName,proto3" json:"kernel_name,omitempty"`
	KernelVersion string `protobuf:"bytes,2,opt,name=kernel_version,json=kernelVersion,proto3" json:"kernel_version,omitempty"`
	Nodes         string `protobuf:"bytes,3,opt,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *KernelInfo) Reset() {
	*x = KernelInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KernelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KernelInfo) ProtoMessage() {}

func (x *KernelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KernelInfo.ProtoReflect.Descriptor instead.
func (*KernelInfo) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{39}
}

func (x *KernelInfo) GetKernelName() string {
	if x != nil {
		return x.KernelName
	}
	return ""
}

func (x *KernelInfo) GetKernelVersion() string {
	if x != nil {
		return x.KernelVersion
	}
	return ""
}

func (x *KernelInfo) GetNodes() string {
	if x != nil {
		return x.Nodes
	}
	return ""
}

// Kernel List info
type KernelListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kernels []*KernelInfo `protobuf:"bytes,1,rep,name=kernels,proto3" json:"kernels,omitempty"`
}

func (x *KernelListResponse) Reset() {
	*x = KernelListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KernelListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KernelListResponse) ProtoMessage() {}

func (x *KernelListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KernelListResponse.ProtoReflect.Descriptor instead.
func (*KernelListResponse) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{40}
}

func (x *KernelListResponse) GetKernels() []*KernelInfo {
	if x != nil {
		return x.Kernels
	}
	return nil
}

// Overlay List
type OverlayListParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Overlays []string                      `protobuf:"bytes,1,rep,name=overlays,proto3" json:"overlays,omitempty"`
	Type     OverlayListParameter_ListType `protobuf:"varint,2,opt,name=type,proto3,enum=wwapi.v1.OverlayListParameter_ListType" json:"type,omitempty"`
}

func (x *OverlayListParameter) Reset() {
	*x = OverlayListParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverlayListParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverlayListParameter) ProtoMessage() {}

func (x *OverlayListParameter) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverlayListParameter.ProtoReflect.Descriptor instead.
func (*OverlayListParameter) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{41}
}

func (x *OverlayListParameter) GetOverlays() []string {
	if x != nil {
		return x.Overlays
	}
	return nil
}

func (x *OverlayListParameter) GetType() OverlayListParameter_ListType {
	if x != nil {
		return x.Type
	}
	return OverlayListParameter_TYPE_UNSPECIFIED
}

type OverlayListSimple struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OverlayName string `protobuf:"bytes,1,opt,name=overlay_name,json=overlayName,proto3" json:"overlay_name,omitempty"`
	FilesDirs   string `protobuf:"bytes,2,opt,name=files_dirs,json=filesDirs,proto3" json:"files_dirs,omitempty"`
}

func (x *OverlayListSimple) Reset() {
	*x = OverlayListSimple{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverlayListSimple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverlayListSimple) ProtoMessage() {}

func (x *OverlayListSimple) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverlayListSimple.ProtoReflect.Descriptor instead.
func (*OverlayListSimple) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{42}
}

func (x *OverlayListSimple) GetOverlayName() string {
	if x != nil {
		return x.OverlayName
	}
	return ""
}

func (x *OverlayListSimple) GetFilesDirs() string {
	if x != nil {
		return x.FilesDirs
	}
	return ""
}

type OverlayListLong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PermMode      string `protobuf:"bytes,1,opt,name=perm_mode,json=permMode,proto3" json:"perm_mode,omitempty"`
	Uid           string `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid           string `protobuf:"bytes,3,opt,name=gid,proto3" json:"gid,omitempty"`
	SystemOverlay string `protobuf:"bytes,4,opt,name=system_overlay,json=systemOverlay,proto3" json:"system_overlay,omitempty"`
	FilePath      string `protobuf:"bytes,5,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
}

func (x *OverlayListLong) Reset() {
	*x = OverlayListLong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverlayListLong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverlayListLong) ProtoMessage() {}

func (x *OverlayListLong) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverlayListLong.ProtoReflect.Descriptor instead.
func (*OverlayListLong) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{43}
}

func (x *OverlayListLong) GetPermMode() string {
	if x != nil {
		return x.PermMode
	}
	return ""
}

func (x *OverlayListLong) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *OverlayListLong) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *OverlayListLong) GetSystemOverlay() string {
	if x != nil {
		return x.SystemOverlay
	}
	return ""
}

func (x *OverlayListLong) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

type OverlayListResponseEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to OverlayEntry:
	//
	//	*OverlayListResponseEntry_OverlaySimple
	//	*OverlayListResponseEntry_OverlayLong
	OverlayEntry isOverlayListResponseEntry_OverlayEntry `protobuf_oneof:"overlay_entry"`
}

func (x *OverlayListResponseEntry) Reset() {
	*x = OverlayListResponseEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverlayListResponseEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverlayListResponseEntry) ProtoMessage() {}

func (x *OverlayListResponseEntry) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverlayListResponseEntry.ProtoReflect.Descriptor instead.
func (*OverlayListResponseEntry) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{44}
}

func (m *OverlayListResponseEntry) GetOverlayEntry() isOverlayListResponseEntry_OverlayEntry {
	if m != nil {
		return m.OverlayEntry
	}
	return nil
}

func (x *OverlayListResponseEntry) GetOverlaySimple() *OverlayListSimple {
	if x, ok := x.GetOverlayEntry().(*OverlayListResponseEntry_OverlaySimple); ok {
		return x.OverlaySimple
	}
	return nil
}

func (x *OverlayListResponseEntry) GetOverlayLong() *OverlayListLong {
	if x, ok := x.GetOverlayEntry().(*OverlayListResponseEntry_OverlayLong); ok {
		return x.OverlayLong
	}
	return nil
}

type isOverlayListResponseEntry_OverlayEntry interface {
	isOverlayListResponseEntry_OverlayEntry()
}

type OverlayListResponseEntry_OverlaySimple struct {
	OverlaySimple *OverlayListSimple `protobuf:"bytes,1,opt,name=overlay_simple,json=overlaySimple,proto3,oneof"`
}

type OverlayListResponseEntry_OverlayLong struct {
	OverlayLong *OverlayListLong `protobuf:"bytes,2,opt,name=overlay_long,json=overlayLong,proto3,oneof"`
}

func (*OverlayListResponseEntry_OverlaySimple) isOverlayListResponseEntry_OverlayEntry() {}

func (*OverlayListResponseEntry_OverlayLong) isOverlayListResponseEntry_OverlayEntry() {}

type OverlayListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Overlays []*OverlayListResponseEntry `protobuf:"bytes,1,rep,name=overlays,proto3" json:"overlays,omitempty"`
}

func (x *OverlayListResponse) Reset() {
	*x = OverlayListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routes_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverlayListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverlayListResponse) ProtoMessage() {}

func (x *OverlayListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_routes_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverlayListResponse.ProtoReflect.Descriptor instead.
func (*OverlayListResponse) Descriptor() ([]byte, []int) {
	return file_routes_proto_rawDescGZIP(), []int{45}
}

func (x *OverlayListResponse) GetOverlays() []*OverlayListResponseEntry {
	if x != nil {
		return x.Overlays
	}
	return nil
}

var File_routes_proto protoreflect.FileDescriptor

var file_routes_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08,
	0x77, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x20, 0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x42, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x83, 0x01, 0x0a, 0x17, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x61, 0x6c,
	0x6c, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x42, 0x0a, 0x18, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22,
	0x76, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x70, 0x79,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc0, 0x01, 0x0a, 0x18, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x79, 0x6e, 0x63, 0x55, 0x73, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x73, 0x79, 0x6e, 0x63, 0x55, 0x73, 0x65, 0x72, 0x22, 0xb5, 0x01, 0x0a, 0x0d, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24,
	0x0a, 0x0d, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x22, 0x50, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x77, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x73, 0x22, 0x3e, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x53, 0x68, 0x6f, 0x77, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x24,
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x7f, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6f, 0x74, 0x66, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x52, 0x6f, 0x6f, 0x74, 0x66, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12,
	0x24, 0x0a, 0x0d, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x42, 0x0a, 0x1a, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x53, 0x79, 0x6e, 0x63, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x29, 0x0a, 0x09, 0x4e, 0x6f, 0x64,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x22, 0x4f, 0x0a, 0x09, 0x4e, 0x6f, 0x64, 0x65, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x22, 0x88, 0x02, 0x0a, 0x06, 0x4e, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x12, 0x31, 0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x77, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x44, 0x65,
	0x76, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x54, 0x61, 0x67, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x77, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74,
	0x44, 0x65, 0x76, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x54,
	0x61, 0x67, 0x73, 0x1a, 0x4d, 0x0a, 0x0a, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x77, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x4c, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x77, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x9b, 0x04, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x36, 0x0a,
	0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x77, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x39, 0x0a, 0x07, 0x4e, 0x65, 0x74, 0x44, 0x65, 0x76, 0x73,
	0x18, 0x17, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x77, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4e, 0x65, 0x74, 0x44, 0x65,
	0x76, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x4e, 0x65, 0x74, 0x44, 0x65, 0x76, 0x73,
	0x12, 0x30, 0x0a, 0x04, 0x54, 0x61, 0x67, 0x73, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x77, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x54, 0x61,
	0x67, 0x73, 0x12, 0x30, 0x0a, 0x04, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x19, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x77, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4b, 0x65, 0x79, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04,
	0x4b, 0x65, 0x79, 0x73, 0x1a, 0x4e, 0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x77, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4c, 0x0a, 0x0c, 0x4e, 0x65, 0x74, 0x44, 0x65, 0x76, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x77, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x65, 0x74, 0x44, 0x65, 0x76, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x4c, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x77, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x4c, 0x0a, 0x09, 0x4b, 0x65, 0x79, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x77, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3c,
	0x0a, 0x10, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x77, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0xa6, 0x01, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x77, 0x77, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x4d, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x49, 0x70, 0x6d, 0x69, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x6f, 0x6e, 0x67, 0x10, 0x03, 0x12,
	0x07, 0x0a, 0x03, 0x41, 0x6c, 0x6c, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x75, 0x6c, 0x6c,
	0x41, 0x6c, 0x6c, 0x10, 0x05, 0x22, 0x22, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x63, 0x0a, 0x0e, 0x4e, 0x6f, 0x64,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x22, 0xa4,
	0x01, 0x0a, 0x0f, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x77, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x77, 0x61, 0x64, 0x64, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x70, 0x61, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x70, 0x61,
	0x64, 0x64, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0xe1, 0x01, 0x0a, 0x0c, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x70, 0x6d, 0x69, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x70, 0x6d, 0x69, 0x5f, 0x69, 0x70, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x70, 0x6d, 0x69, 0x49,
	0x70, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x70, 0x6d, 0x69, 0x5f, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x70, 0x6d, 0x69, 0x50, 0x6f,
	0x72, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x70, 0x6d, 0x69, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x70, 0x6d, 0x69,
	0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x70, 0x6d, 0x69,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x69, 0x70, 0x6d, 0x69, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12,
	0x28, 0x0a, 0x10, 0x69, 0x70, 0x6d, 0x69, 0x5f, 0x65, 0x73, 0x63, 0x61, 0x70, 0x65, 0x5f, 0x63,
	0x68, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x70, 0x6d, 0x69, 0x45,
	0x73, 0x63, 0x61, 0x70, 0x65, 0x43, 0x68, 0x61, 0x72, 0x22, 0xaa, 0x01, 0x0a, 0x0c, 0x4e, 0x6f,
	0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6b, 0x65, 0x72, 0x6e, 0x65,
	0x6c, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x36,
	0x0a, 0x17, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x73, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x15, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x71, 0x0a, 0x0c, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x46, 0x75, 0x6c, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xbf, 0x02, 0x0a, 0x0d, 0x4e, 0x6f,
	0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x3b, 0x0a, 0x0b, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x77, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x6e, 0x6f,
	0x64, 0x65, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x77, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x48, 0x00, 0x52, 0x0b, 0x6e, 0x6f, 0x64,
	0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x35, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x69, 0x70, 0x6d, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x77,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x70, 0x6d, 0x69, 0x48, 0x00, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x70, 0x6d, 0x69, 0x12,
	0x35, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x08, 0x6e, 0x6f,
	0x64, 0x65, 0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x35, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x66,
	0x75, 0x6c, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x77, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x75, 0x6c,
	0x6c, 0x48, 0x00, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x46, 0x75, 0x6c, 0x6c, 0x42, 0x0c, 0x0a,
	0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x45, 0x0a, 0x14, 0x4e,
	0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x77, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x22, 0x68, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x6c, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x6c, 0x6c, 0x12, 0x20,
	0x0a, 0x0b, 0x53, 0x68, 0x6f, 0x77, 0x46, 0x75, 0x6c, 0x6c, 0x41, 0x6c, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x53, 0x68, 0x6f, 0x77, 0x46, 0x75, 0x6c, 0x6c, 0x41, 0x6c, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x25, 0x0a, 0x0b,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x22, 0x78, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x46, 0x75, 0x6c, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x50, 0x0a,
	0x11, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22,
	0xa9, 0x01, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x3e, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x66, 0x75, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x77, 0x77, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x46, 0x75, 0x6c, 0x6c, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x46, 0x75, 0x6c, 0x6c, 0x12, 0x44, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x77,
	0x77, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x4d, 0x0a, 0x13, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x77, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x7e, 0x0a, 0x10, 0x4e, 0x6f,
	0x64, 0x65, 0x41, 0x64, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x22,
	0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x59, 0x61, 0x6d, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x59, 0x61,
	0x6d, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x48, 0x0a, 0x08, 0x4e, 0x6f,
	0x64, 0x65, 0x59, 0x61, 0x6d, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x4d, 0x61, 0x70, 0x59, 0x61, 0x6d, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x4d, 0x61, 0x70, 0x59, 0x61, 0x6d, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x22, 0x5d, 0x0a, 0x13, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x61, 0x73, 0x68, 0x22, 0xa0, 0x02, 0x0a, 0x10, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x74, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x59, 0x61, 0x6d, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x59, 0x61, 0x6d, 0x6c, 0x12, 0x22, 0x0a, 0x0c,
	0x6e, 0x65, 0x74, 0x64, 0x65, 0x76, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6e, 0x65, 0x74, 0x64, 0x65, 0x76, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6c, 0x6c, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x6c, 0x6c, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x6f, 0x64,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0xaf, 0x02, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x22,
	0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x59, 0x61, 0x6d, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x59, 0x61,
	0x6d, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x65, 0x74, 0x64, 0x65, 0x76, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x65, 0x74, 0x64, 0x65, 0x76,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x6b, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x6b,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x2a, 0x0a, 0x10, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x0a, 0x4e, 0x6f, 0x64,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x70, 0x61, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69,
	0x70, 0x61, 0x64, 0x64, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x73, 0x65, 0x65,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x73, 0x65, 0x65,
	0x6e, 0x22, 0x4a, 0x0a, 0x12, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x77, 0x77,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x79, 0x0a,
	0x0f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x70, 0x69, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x69, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28,
	0x0a, 0x0f, 0x77, 0x61, 0x72, 0x65, 0x77, 0x75, 0x6c, 0x66, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x77, 0x61, 0x72, 0x65, 0x77, 0x75, 0x6c,
	0x66, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x38, 0x0a, 0x0e, 0x43, 0x61, 0x6e, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x61,
	0x6e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x63, 0x61, 0x6e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x22, 0x6a, 0x0a, 0x0a, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1f, 0x0a, 0x0b, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6b, 0x65, 0x72, 0x6e, 0x65,
	0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x44,
	0x0a, 0x12, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x77, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x6b, 0x65, 0x72,
	0x6e, 0x65, 0x6c, 0x73, 0x22, 0xb2, 0x01, 0x0a, 0x14, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x73, 0x12, 0x3b, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x77, 0x77, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x41, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x4c, 0x4f, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x22, 0x55, 0x0a, 0x11, 0x4f, 0x76, 0x65,
	0x72, 0x6c, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x44, 0x69, 0x72, 0x73,
	0x22, 0x96, 0x01, 0x0a, 0x0f, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x6d, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x65, 0x72, 0x6d, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x67, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f,
	0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0xb1, 0x01, 0x0a, 0x18, 0x4f, 0x76,
	0x65, 0x72, 0x6c, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x44, 0x0a, 0x0e, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61,
	0x79, 0x5f, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x77, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x6f,
	0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x3e, 0x0a, 0x0c,
	0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x77, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x76,
	0x65, 0x72, 0x6c, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x6e, 0x67, 0x48, 0x00, 0x52,
	0x0b, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x4c, 0x6f, 0x6e, 0x67, 0x42, 0x0f, 0x0a, 0x0d,
	0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x55, 0x0a,
	0x13, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x77, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6f, 0x76, 0x65, 0x72,
	0x6c, 0x61, 0x79, 0x73, 0x32, 0x8f, 0x09, 0x0a, 0x05, 0x57, 0x57, 0x41, 0x70, 0x69, 0x12, 0x73,
	0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x12, 0x21, 0x2e, 0x77, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x1a, 0x1f, 0x2e, 0x77, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x3a, 0x01, 0x2a, 0x12, 0x64, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x77, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x2a, 0x0d, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x67, 0x0a, 0x0d, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x70, 0x79, 0x12, 0x20, 0x2e, 0x77, 0x77, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43,
	0x6f, 0x70, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x63, 0x6f, 0x70, 0x79, 0x3a,
	0x01, 0x2a, 0x12, 0x70, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x22, 0x2e, 0x77, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x1a, 0x1f, 0x2e, 0x77, 0x77, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x12, 0x22, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x3a, 0x01, 0x2a, 0x12, 0x5f, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e,
	0x77, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x6d, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x20, 0x2e, 0x77, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x77, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x1a, 0x1f, 0x2e, 0x77, 0x77, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x68, 0x6f,
	0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x13, 0x12, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x73, 0x68, 0x6f, 0x77, 0x12, 0x56, 0x0a, 0x07, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x64, 0x12,
	0x1a, 0x2e, 0x77, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x41,
	0x64, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x1a, 0x1a, 0x2e, 0x77, 0x77,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x22,
	0x08, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x55, 0x0a, 0x0a,
	0x4e, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x77, 0x77, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x10, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x2a, 0x08, 0x2f, 0x76, 0x31, 0x2f, 0x6e,
	0x6f, 0x64, 0x65, 0x12, 0x4d, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x13, 0x2e, 0x77, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x1a, 0x1a, 0x2e, 0x77, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x10, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f,
	0x64, 0x65, 0x12, 0x59, 0x0a, 0x07, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x74, 0x12, 0x1a, 0x2e,
	0x77, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x1a, 0x1a, 0x2e, 0x77, 0x77, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x22, 0x0b, 0x2f,
	0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x65, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x57, 0x0a,
	0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x13, 0x2e, 0x77, 0x77,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x1a, 0x1c, 0x2e, 0x77, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4e, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x77, 0x77, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x2f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x29, 0x5a, 0x27, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x73, 0x2f, 0x77, 0x77, 0x61, 0x70, 0x69, 0x76, 0x31, 0x3b, 0x77, 0x77, 0x61, 0x70, 0x69, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_routes_proto_rawDescOnce sync.Once
	file_routes_proto_rawDescData = file_routes_proto_rawDesc
)

func file_routes_proto_rawDescGZIP() []byte {
	file_routes_proto_rawDescOnce.Do(func() {
		file_routes_proto_rawDescData = protoimpl.X.CompressGZIP(file_routes_proto_rawDescData)
	})
	return file_routes_proto_rawDescData
}

var file_routes_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_routes_proto_msgTypes = make([]protoimpl.MessageInfo, 52)
var file_routes_proto_goTypes = []interface{}{
	(GetNodeList_ListType)(0),          // 0: wwapi.v1.GetNodeList.ListType
	(OverlayListParameter_ListType)(0), // 1: wwapi.v1.OverlayListParameter.ListType
	(*NodeDBHash)(nil),                 // 2: wwapi.v1.NodeDBHash
	(*ContainerBuildParameter)(nil),    // 3: wwapi.v1.ContainerBuildParameter
	(*ContainerDeleteParameter)(nil),   // 4: wwapi.v1.ContainerDeleteParameter
	(*ContainerCopyParameter)(nil),     // 5: wwapi.v1.ContainerCopyParameter
	(*ContainerImportParameter)(nil),   // 6: wwapi.v1.ContainerImportParameter
	(*ContainerInfo)(nil),              // 7: wwapi.v1.ContainerInfo
	(*ContainerListResponse)(nil),      // 8: wwapi.v1.ContainerListResponse
	(*ContainerShowParameter)(nil),     // 9: wwapi.v1.ContainerShowParameter
	(*ContainerShowResponse)(nil),      // 10: wwapi.v1.ContainerShowResponse
	(*ContainerSyncUserParameter)(nil), // 11: wwapi.v1.ContainerSyncUserParameter
	(*NodeNames)(nil),                  // 12: wwapi.v1.NodeNames
	(*NodeField)(nil),                  // 13: wwapi.v1.NodeField
	(*NetDev)(nil),                     // 14: wwapi.v1.NetDev
	(*NodeInfo)(nil),                   // 15: wwapi.v1.NodeInfo
	(*NodeListResponse)(nil),           // 16: wwapi.v1.NodeListResponse
	(*GetNodeList)(nil),                // 17: wwapi.v1.GetNodeList
	(*NodeList)(nil),                   // 18: wwapi.v1.NodeList
	(*NodeListSimple)(nil),             // 19: wwapi.v1.NodeListSimple
	(*NodeListNetwork)(nil),            // 20: wwapi.v1.NodeListNetwork
	(*NodeListIpmi)(nil),               // 21: wwapi.v1.NodeListIpmi
	(*NodeListLong)(nil),               // 22: wwapi.v1.NodeListLong
	(*NodeListFull)(nil),               // 23: wwapi.v1.NodeListFull
	(*NodeListEntry)(nil),              // 24: wwapi.v1.NodeListEntry
	(*NodeListViewResponse)(nil),       // 25: wwapi.v1.NodeListViewResponse
	(*GetProfileList)(nil),             // 26: wwapi.v1.GetProfileList
	(*ProfileList)(nil),                // 27: wwapi.v1.ProfileList
	(*ProfileListFull)(nil),            // 28: wwapi.v1.ProfileListFull
	(*ProfileListSimple)(nil),          // 29: wwapi.v1.ProfileListSimple
	(*ProfileListEntry)(nil),           // 30: wwapi.v1.ProfileListEntry
	(*ProfileListResponse)(nil),        // 31: wwapi.v1.ProfileListResponse
	(*NodeAddParameter)(nil),           // 32: wwapi.v1.NodeAddParameter
	(*NodeYaml)(nil),                   // 33: wwapi.v1.NodeYaml
	(*NodeDeleteParameter)(nil),        // 34: wwapi.v1.NodeDeleteParameter
	(*NodeSetParameter)(nil),           // 35: wwapi.v1.NodeSetParameter
	(*ProfileSetParameter)(nil),        // 36: wwapi.v1.ProfileSetParameter
	(*NodeStatus)(nil),                 // 37: wwapi.v1.NodeStatus
	(*NodeStatusResponse)(nil),         // 38: wwapi.v1.NodeStatusResponse
	(*VersionResponse)(nil),            // 39: wwapi.v1.VersionResponse
	(*CanWriteConfig)(nil),             // 40: wwapi.v1.CanWriteConfig
	(*KernelInfo)(nil),                 // 41: wwapi.v1.KernelInfo
	(*KernelListResponse)(nil),         // 42: wwapi.v1.KernelListResponse
	(*OverlayListParameter)(nil),       // 43: wwapi.v1.OverlayListParameter
	(*OverlayListSimple)(nil),          // 44: wwapi.v1.OverlayListSimple
	(*OverlayListLong)(nil),            // 45: wwapi.v1.OverlayListLong
	(*OverlayListResponseEntry)(nil),   // 46: wwapi.v1.OverlayListResponseEntry
	(*OverlayListResponse)(nil),        // 47: wwapi.v1.OverlayListResponse
	nil,                                // 48: wwapi.v1.NetDev.FieldEntry
	nil,                                // 49: wwapi.v1.NetDev.TagsEntry
	nil,                                // 50: wwapi.v1.NodeInfo.FieldsEntry
	nil,                                // 51: wwapi.v1.NodeInfo.NetDevsEntry
	nil,                                // 52: wwapi.v1.NodeInfo.TagsEntry
	nil,                                // 53: wwapi.v1.NodeInfo.KeysEntry
	(*emptypb.Empty)(nil),              // 54: google.protobuf.Empty
}
var file_routes_proto_depIdxs = []int32{
	7,  // 0: wwapi.v1.ContainerListResponse.containers:type_name -> wwapi.v1.ContainerInfo
	48, // 1: wwapi.v1.NetDev.Field:type_name -> wwapi.v1.NetDev.FieldEntry
	49, // 2: wwapi.v1.NetDev.Tags:type_name -> wwapi.v1.NetDev.TagsEntry
	50, // 3: wwapi.v1.NodeInfo.Fields:type_name -> wwapi.v1.NodeInfo.FieldsEntry
	51, // 4: wwapi.v1.NodeInfo.NetDevs:type_name -> wwapi.v1.NodeInfo.NetDevsEntry
	52, // 5: wwapi.v1.NodeInfo.Tags:type_name -> wwapi.v1.NodeInfo.TagsEntry
	53, // 6: wwapi.v1.NodeInfo.Keys:type_name -> wwapi.v1.NodeInfo.KeysEntry
	15, // 7: wwapi.v1.NodeListResponse.nodes:type_name -> wwapi.v1.NodeInfo
	0,  // 8: wwapi.v1.GetNodeList.type:type_name -> wwapi.v1.GetNodeList.ListType
	19, // 9: wwapi.v1.NodeListEntry.node_simple:type_name -> wwapi.v1.NodeListSimple
	20, // 10: wwapi.v1.NodeListEntry.node_network:type_name -> wwapi.v1.NodeListNetwork
	21, // 11: wwapi.v1.NodeListEntry.node_ipmi:type_name -> wwapi.v1.NodeListIpmi
	22, // 12: wwapi.v1.NodeListEntry.node_long:type_name -> wwapi.v1.NodeListLong
	23, // 13: wwapi.v1.NodeListEntry.node_full:type_name -> wwapi.v1.NodeListFull
	24, // 14: wwapi.v1.NodeListViewResponse.nodes:type_name -> wwapi.v1.NodeListEntry
	28, // 15: wwapi.v1.ProfileListEntry.profile_full:type_name -> wwapi.v1.ProfileListFull
	29, // 16: wwapi.v1.ProfileListEntry.profile_simple:type_name -> wwapi.v1.ProfileListSimple
	30, // 17: wwapi.v1.ProfileListResponse.profiles:type_name -> wwapi.v1.ProfileListEntry
	37, // 18: wwapi.v1.NodeStatusResponse.nodeStatus:type_name -> wwapi.v1.NodeStatus
	41, // 19: wwapi.v1.KernelListResponse.kernels:type_name -> wwapi.v1.KernelInfo
	1,  // 20: wwapi.v1.OverlayListParameter.type:type_name -> wwapi.v1.OverlayListParameter.ListType
	44, // 21: wwapi.v1.OverlayListResponseEntry.overlay_simple:type_name -> wwapi.v1.OverlayListSimple
	45, // 22: wwapi.v1.OverlayListResponseEntry.overlay_long:type_name -> wwapi.v1.OverlayListLong
	46, // 23: wwapi.v1.OverlayListResponse.overlays:type_name -> wwapi.v1.OverlayListResponseEntry
	13, // 24: wwapi.v1.NetDev.FieldEntry.value:type_name -> wwapi.v1.NodeField
	13, // 25: wwapi.v1.NetDev.TagsEntry.value:type_name -> wwapi.v1.NodeField
	13, // 26: wwapi.v1.NodeInfo.FieldsEntry.value:type_name -> wwapi.v1.NodeField
	14, // 27: wwapi.v1.NodeInfo.NetDevsEntry.value:type_name -> wwapi.v1.NetDev
	13, // 28: wwapi.v1.NodeInfo.TagsEntry.value:type_name -> wwapi.v1.NodeField
	13, // 29: wwapi.v1.NodeInfo.KeysEntry.value:type_name -> wwapi.v1.NodeField
	3,  // 30: wwapi.v1.WWApi.ContainerBuild:input_type -> wwapi.v1.ContainerBuildParameter
	4,  // 31: wwapi.v1.WWApi.ContainerDelete:input_type -> wwapi.v1.ContainerDeleteParameter
	5,  // 32: wwapi.v1.WWApi.ContainerCopy:input_type -> wwapi.v1.ContainerCopyParameter
	6,  // 33: wwapi.v1.WWApi.ContainerImport:input_type -> wwapi.v1.ContainerImportParameter
	54, // 34: wwapi.v1.WWApi.ContainerList:input_type -> google.protobuf.Empty
	9,  // 35: wwapi.v1.WWApi.ContainerShow:input_type -> wwapi.v1.ContainerShowParameter
	32, // 36: wwapi.v1.WWApi.NodeAdd:input_type -> wwapi.v1.NodeAddParameter
	34, // 37: wwapi.v1.WWApi.NodeDelete:input_type -> wwapi.v1.NodeDeleteParameter
	12, // 38: wwapi.v1.WWApi.NodeList:input_type -> wwapi.v1.NodeNames
	35, // 39: wwapi.v1.WWApi.NodeSet:input_type -> wwapi.v1.NodeSetParameter
	12, // 40: wwapi.v1.WWApi.NodeStatus:input_type -> wwapi.v1.NodeNames
	54, // 41: wwapi.v1.WWApi.Version:input_type -> google.protobuf.Empty
	8,  // 42: wwapi.v1.WWApi.ContainerBuild:output_type -> wwapi.v1.ContainerListResponse
	54, // 43: wwapi.v1.WWApi.ContainerDelete:output_type -> google.protobuf.Empty
	54, // 44: wwapi.v1.WWApi.ContainerCopy:output_type -> google.protobuf.Empty
	8,  // 45: wwapi.v1.WWApi.ContainerImport:output_type -> wwapi.v1.ContainerListResponse
	8,  // 46: wwapi.v1.WWApi.ContainerList:output_type -> wwapi.v1.ContainerListResponse
	10, // 47: wwapi.v1.WWApi.ContainerShow:output_type -> wwapi.v1.ContainerShowResponse
	16, // 48: wwapi.v1.WWApi.NodeAdd:output_type -> wwapi.v1.NodeListResponse
	54, // 49: wwapi.v1.WWApi.NodeDelete:output_type -> google.protobuf.Empty
	16, // 50: wwapi.v1.WWApi.NodeList:output_type -> wwapi.v1.NodeListResponse
	16, // 51: wwapi.v1.WWApi.NodeSet:output_type -> wwapi.v1.NodeListResponse
	38, // 52: wwapi.v1.WWApi.NodeStatus:output_type -> wwapi.v1.NodeStatusResponse
	39, // 53: wwapi.v1.WWApi.Version:output_type -> wwapi.v1.VersionResponse
	42, // [42:54] is the sub-list for method output_type
	30, // [30:42] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_routes_proto_init() }
func file_routes_proto_init() {
	if File_routes_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_routes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeDBHash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerBuildParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerDeleteParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerCopyParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerImportParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerShowParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerShowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerSyncUserParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeNames); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetDev); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeListSimple); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeListNetwork); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeListIpmi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeListLong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeListFull); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeListEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeListViewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileListFull); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileListSimple); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileListEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeAddParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeYaml); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeDeleteParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeSetParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileSetParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CanWriteConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KernelInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KernelListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverlayListParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverlayListSimple); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverlayListLong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverlayListResponseEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routes_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverlayListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_routes_proto_msgTypes[22].OneofWrappers = []interface{}{
		(*NodeListEntry_NodeSimple)(nil),
		(*NodeListEntry_NodeNetwork)(nil),
		(*NodeListEntry_NodeIpmi)(nil),
		(*NodeListEntry_NodeLong)(nil),
		(*NodeListEntry_NodeFull)(nil),
	}
	file_routes_proto_msgTypes[28].OneofWrappers = []interface{}{
		(*ProfileListEntry_ProfileFull)(nil),
		(*ProfileListEntry_ProfileSimple)(nil),
	}
	file_routes_proto_msgTypes[44].OneofWrappers = []interface{}{
		(*OverlayListResponseEntry_OverlaySimple)(nil),
		(*OverlayListResponseEntry_OverlayLong)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_routes_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   52,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_routes_proto_goTypes,
		DependencyIndexes: file_routes_proto_depIdxs,
		EnumInfos:         file_routes_proto_enumTypes,
		MessageInfos:      file_routes_proto_msgTypes,
	}.Build()
	File_routes_proto = out.File
	file_routes_proto_rawDesc = nil
	file_routes_proto_goTypes = nil
	file_routes_proto_depIdxs = nil
}
